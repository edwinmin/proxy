package com.open.proxy.aop.invocation;import java.lang.reflect.Method;import net.sf.cglib.proxy.MethodProxy;/** * @author jinming.wu * @date 2014-4-8 */public class CglibMethodInvocation extends DefaultMethodInvocation {    private MethodProxy methodProxy;    public CglibMethodInvocation(Object target, Method method, Object[] args, MethodProxy methodProxy) {        super(target, method, args);        this.methodProxy = methodProxy;    }    @Override    public Object proceed() throws Throwable {        return this.methodProxy.invoke(this.getThis(), this.getArguments());    }}